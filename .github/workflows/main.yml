name: main

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

jobs:
  build-matrix:
    name: Matrix
    uses: metanorma/ci/.github/workflows/build-sample-matrix.yml@main
    with:
      smoke: false
      flavors-only: true
      public-only: true

  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Pack Chocolatey package
        run: choco pack

      # Download xml2rfc dependency for Docker builds
      - name: Get latest xml2rfc release and download package
        run: |
          Write-Host "Getting latest xml2rfc release..." -ForegroundColor Yellow
          $response = Invoke-RestMethod -Uri "https://api.github.com/repos/metanorma/chocolatey-xml2rfc/releases/latest"
          $version = $response.tag_name
          $versionNumber = $version.TrimStart('v')
          $url = "https://github.com/metanorma/chocolatey-xml2rfc/releases/download/$version/xml2rfc.$versionNumber.nupkg"
          $filename = "xml2rfc.$versionNumber.nupkg"
          Write-Host "Latest version: $version"
          Write-Host "Downloading xml2rfc package from: $url"
          Invoke-WebRequest -Uri $url -OutFile $filename
          Write-Host "Downloaded xml2rfc package: $filename" -ForegroundColor Green
        shell: powershell

      - uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: |
            metanorma.*.nupkg
            xml2rfc.*.nupkg

      # Install dependencies first, then xml2rfc from local package
      - name: Install dependencies and xml2rfc
        run: |
          Write-Host "Installing python3 dependency from Chocolatey..." -ForegroundColor Yellow
          choco install python3 -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install python3 dependency"
            exit 1
          }

          Write-Host "Installing xml2rfc from downloaded package..." -ForegroundColor Yellow
          choco install xml2rfc --source="'$(Get-Location)'" --ignore-dependencies -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install xml2rfc from downloaded package"
            exit 1
          }
          Write-Host "xml2rfc installed successfully from local package" -ForegroundColor Green
        shell: powershell

      # Verify xml2rfc executable is available
      - name: Verify xml2rfc installation
        shell: powershell
        run: |
          if (Get-Command "xml2rfc" -ErrorAction SilentlyContinue) {
            Write-Host "[OK] xml2rfc executable found"
            xml2rfc --version
          } else {
            Write-Error "xml2rfc not available - IETF support requires xml2rfc"
            exit 1
          }

      # Install metanorma from local package and verify installation
      - name: Install and test metanorma
        shell: powershell
        run: |
          Write-Host "Installing metanorma from local package..." -ForegroundColor Yellow
          choco install metanorma --source="'$(Get-Location)'" --ignore-dependencies -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install metanorma from local package"
            exit 1
          }
          Write-Host "metanorma installed successfully from local package" -ForegroundColor Green

      # Verify metanorma executable is available
      - name: Verify metanorma installation
        shell: powershell
        run: |
          if (Get-Command "metanorma" -ErrorAction SilentlyContinue) {
            Write-Host "[OK] metanorma executable found"
            metanorma version
          } else {
            Write-Error "metanorma executable not found in PATH"
            exit 1
          }

  test-scripts:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test installation/uninstallation scripts
        run: |
          # Run comprehensive test suite
          pwsh -ExecutionPolicy Bypass -File test/test_installation.ps1 -Verbose
        shell: powershell

  test-docker:
    runs-on: windows-2022 # must match to test/Dockerfile image
    needs: [build, build-matrix]

    concurrency:
      group: 'test-docker-${{ github.workflow }}-${{ github.job }}-${{ matrix.flavor.id }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.flavor.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: true
      matrix: # ${{ fromJson(needs.build-matrix.outputs.samples-matrix) }}
        flavor: # https://github.com/metanorma/chocolatey-metanorma/issues/73
          - id: iso
            experimental: true

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: nupkg
          path: test

      # unfortunatelly windows docker image too big to prebuild it once
      - run: docker build -t metanorma-docker-test .
        working-directory: test

      - run: docker image inspect metanorma-docker-test

      - name: Fetch samples (${{ matrix.flavor.id }})
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: metanorma/mn-samples-${{ matrix.flavor.id }}
          path: ${{ matrix.flavor.id }}
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          fetch-depth: 1

      - name: Setup metanorma command and generate site documentation
        working-directory: ${{ matrix.flavor.id }}
        shell: powershell
        run: |
          # Generate site documentation directly with docker
          # Mount current directory and run metanorma command inside container
          $currentDir = (Get-Location).Path
          docker run --rm -v "${currentDir}:C:\workspace" -w "C:\workspace" metanorma-docker-test -Command "metanorma site generate -c C:\workspace\metanorma.yml --agree-to-terms"

      # actions-mn/site-gen@main does not support Windows yet
      # - uses: actions-mn/site-gen@main
      #   with:
      #     agree-to-terms: true
      #     source-path: ${{ matrix.flavor.id }}
  test:
    runs-on: windows-latest
    needs: [build, build-matrix]

    concurrency:
      group: 'test-${{ github.workflow }}-${{ github.job }}-${{ matrix.flavor.id }}-${{ github.head_ref || github.ref_name }}'
      cancel-in-progress: true

    continue-on-error: ${{ matrix.flavor.experimental }}
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.samples-matrix) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: nupkg

      # Install dependencies first, then xml2rfc from local package
      - name: Install dependencies and xml2rfc
        run: |
          Write-Host "Installing python3 dependency from Chocolatey..." -ForegroundColor Yellow
          choco install python3 -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install python3 dependency"
            exit 1
          }

          Write-Host "Installing xml2rfc from downloaded package..." -ForegroundColor Yellow
          choco install xml2rfc --source="'$(Get-Location)'" --ignore-dependencies -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install xml2rfc from downloaded package"
            exit 1
          }
          Write-Host "xml2rfc installed successfully from local package" -ForegroundColor Green
        shell: powershell

      # Verify xml2rfc executable is available
      - name: Verify xml2rfc installation
        shell: powershell
        run: |
          if (Get-Command "xml2rfc" -ErrorAction SilentlyContinue) {
            Write-Host "[OK] xml2rfc executable found"
            xml2rfc --version
          } else {
            Write-Error "xml2rfc not available - IETF support requires xml2rfc"
            exit 1
          }

      # Install metanorma from local package and verify installation
      - name: Install and test metanorma
        shell: powershell
        run: |
          Write-Host "Installing metanorma from local package..." -ForegroundColor Yellow
          choco install metanorma --source="'$(Get-Location)'" --ignore-dependencies -y --no-progress
          if ($LASTEXITCODE -ne 0) {
            Write-Error "Failed to install metanorma from local package"
            exit 1
          }
          Write-Host "metanorma installed successfully from local package" -ForegroundColor Green

      # Verify metanorma executable is available
      - name: Verify metanorma installation
        shell: powershell
        run: |
          if (Get-Command "metanorma" -ErrorAction SilentlyContinue) {
            Write-Host "[OK] metanorma executable found"
            metanorma version
          } else {
            Write-Error "metanorma executable not found in PATH"
            exit 1
          }

      - name: Fetch samples (${{ matrix.flavor.id }})
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: metanorma/mn-samples-${{ matrix.flavor.id }}
          token: ${{ secrets.METANORMA_CI_PAT_TOKEN }}
          fetch-depth: 1

      - uses: actions-mn/site-gen@main
        with:
          agree-to-terms: true

      - name: Uninstall metanorma
        run: choco uninstall metanorma -y

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    needs: [test, test-scripts]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: nupkg

      - name: Push to chocolatey
        shell: pwsh
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
        run: |
          $namespaces = @{nuspec = "http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd"}
          $pkgVersion = Select-Xml -Path metanorma.nuspec `
               -XPath "/nuspec:package/nuspec:metadata/nuspec:version/text()" `
               -Namespace $namespaces | Select-Object -Expand Node | Select-Object -Expand Data
          choco apikey -key $Env:CHOCO_API_KEY -source https://chocolatey.org/
          choco push metanorma.${pkgVersion}.nupkg -source https://chocolatey.org/
